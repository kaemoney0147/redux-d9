{"ast":null,"code":"var _jsxFileName = \"/Users/kay/Desktop/redux-d9/src/components/CompanySearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport Job from './Job';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanySearchResults = () => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const params = useParams();\n  const baseEndpoint = 'https://strive-jobs-api.herokuapp.com/jobs?company=';\n  useEffect(() => {\n    getJobs();\n  }, []);\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.companyName);\n\n      if (response.ok) {\n        const {\n          data\n        } = await response.json();\n        console.log(data);\n        setJobs(data);\n      } else {\n        alert('Error fetching results');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n          data: jobData\n        }, jobData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mt-2\",\n          variant: \"info\",\n          onClick: () => navigate(-1),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanySearchResults, \"dckmTRAm79Ju2O9AWzYTIwDN4qo=\", false, function () {\n  return [useParams];\n});\n\n_c = CompanySearchResults;\nexport default CompanySearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanySearchResults\");","map":{"version":3,"names":["useEffect","useState","Container","Row","Col","Button","Job","useParams","CompanySearchResults","jobs","setJobs","params","baseEndpoint","getJobs","response","fetch","companyName","ok","data","json","console","log","alert","error","map","jobData","_id","navigate"],"sources":["/Users/kay/Desktop/redux-d9/src/components/CompanySearchResults.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { Container, Row, Col,Button } from 'react-bootstrap'\nimport Job from './Job'\nimport { useParams } from 'react-router-dom'\n\nconst CompanySearchResults = () => {\n  const [jobs, setJobs] = useState([])\n  const params = useParams()\n\n  const baseEndpoint = 'https://strive-jobs-api.herokuapp.com/jobs?company='\n\n  useEffect(() => {\n    getJobs()\n  }, [])\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.companyName)\n      if (response.ok) {\n        const { data } = await response.json()\n        console.log(data)\n        setJobs(data)\n      } else {\n        alert('Error fetching results')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {jobs.map((jobData) => (\n            <Job key={jobData._id} data={jobData} />\n          ))}\n          <Button className=\"mt-2\" variant=\"info\" onClick={() => navigate(-1)}>\n            Back\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default CompanySearchResults\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA6BC,MAA7B,QAA2C,iBAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;EAAA;;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMU,MAAM,GAAGJ,SAAS,EAAxB;EAEA,MAAMK,YAAY,GAAG,qDAArB;EAEAZ,SAAS,CAAC,MAAM;IACda,OAAO;EACR,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,OAAO,GAAG,YAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,YAAY,GAAGD,MAAM,CAACK,WAAvB,CAA5B;;MACA,IAAIF,QAAQ,CAACG,EAAb,EAAiB;QACf,MAAM;UAAEC;QAAF,IAAW,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;QACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;QACAR,OAAO,CAACQ,IAAD,CAAP;MACD,CAJD,MAIO;QACLI,KAAK,CAAC,wBAAD,CAAL;MACD;IACF,CATD,CASE,OAAOC,KAAP,EAAc;MACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ;IACD;EACF,CAbD;;EAeA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MAAA,uBACE,QAAC,GAAD;QAAA,WACGd,IAAI,CAACe,GAAL,CAAUC,OAAD,iBACR,QAAC,GAAD;UAAuB,IAAI,EAAEA;QAA7B,GAAUA,OAAO,CAACC,GAAlB;UAAA;UAAA;UAAA;QAAA,QADD,CADH,eAIE,QAAC,MAAD;UAAQ,SAAS,EAAC,MAAlB;UAAyB,OAAO,EAAC,MAAjC;UAAwC,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAAC,CAAF,CAA/D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAvCD;;GAAMnB,oB;UAEWD,S;;;KAFXC,oB;AAyCN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}