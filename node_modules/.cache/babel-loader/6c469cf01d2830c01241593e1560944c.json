{"ast":null,"code":"export const addFavourites = job => {\n  return {\n    type: \"ADD_FAVORITE-COMPANY\",\n    payload: job\n  };\n};\nexport const deleteFavourites = job => {\n  return {\n    type: \"REMOVE_FROM_FAVS\",\n    payload: job\n  };\n};\nexport const SEARCH_JOBS = \"SEARCH_JOBS\";\nexport const JOB_LOADING = \"JOB_LOADING\"; // action creator/builder, this can have any number of parameters\n\nexport const getJobList = query => {\n  // this is the thunk action, always 2 parameters\n  return async (dispatch, getState) => {\n    console.log(\"Fetching the jobs from the API...\");\n\n    try {\n      let baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?search=\";\n      const response = await fetch(baseEndpoint + query + \"&limit=20\");\n\n      if (response.ok) {\n        let data = await response.json();\n        const fetchJobs = data.data; // {data}\n\n        dispatch({\n          type: SEARCH_JOBS,\n          payload: fetchJobs\n        });\n        setTimeout(() => {\n          dispatch({\n            type: JOB_LOADING,\n            payload: false\n          });\n        }, 100);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"names":["addFavourites","job","type","payload","deleteFavourites","SEARCH_JOBS","JOB_LOADING","getJobList","query","dispatch","getState","console","log","baseEndpoint","response","fetch","ok","data","json","fetchJobs","setTimeout","alert","error"],"sources":["/Users/kay/Desktop/redux-d9/src/redux/actions/index.js"],"sourcesContent":["export const addFavourites = (job) => {\n  return {\n    type: \"ADD_FAVORITE-COMPANY\",\n    payload: job,\n  };\n};\n\nexport const deleteFavourites = (job) => {\n  return {\n    type: \"REMOVE_FROM_FAVS\",\n    payload: job,\n  };\n};\n\nexport const SEARCH_JOBS = \"SEARCH_JOBS\";\nexport const JOB_LOADING = \"JOB_LOADING\";\n\n// action creator/builder, this can have any number of parameters\nexport const getJobList = (query) => {\n  // this is the thunk action, always 2 parameters\n  return async (dispatch, getState) => {\n    console.log(\"Fetching the jobs from the API...\");\n    try {\n      let baseEndpoint =\n        \"https://strive-benchmark.herokuapp.com/api/jobs?search=\";\n      const response = await fetch(baseEndpoint + query + \"&limit=20\");\n      if (response.ok) {\n        let data = await response.json();\n        const fetchJobs = data.data;\n        // {data}\n\n        dispatch({\n          type: SEARCH_JOBS,\n          payload: fetchJobs,\n        });\n        setTimeout(() => {\n          dispatch({\n            type: JOB_LOADING,\n            payload: false,\n          });\n        }, 100);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,GAAD,IAAS;EACpC,OAAO;IACLC,IAAI,EAAE,sBADD;IAELC,OAAO,EAAEF;EAFJ,CAAP;AAID,CALM;AAOP,OAAO,MAAMG,gBAAgB,GAAIH,GAAD,IAAS;EACvC,OAAO;IACLC,IAAI,EAAE,kBADD;IAELC,OAAO,EAAEF;EAFJ,CAAP;AAID,CALM;AAOP,OAAO,MAAMI,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB,C,CAEP;;AACA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;EACnC;EACA,OAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;IACnCC,OAAO,CAACC,GAAR,CAAY,mCAAZ;;IACA,IAAI;MACF,IAAIC,YAAY,GACd,yDADF;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,YAAY,GAAGL,KAAf,GAAuB,WAAxB,CAA5B;;MACA,IAAIM,QAAQ,CAACE,EAAb,EAAiB;QACf,IAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB;QACA,MAAMC,SAAS,GAAGF,IAAI,CAACA,IAAvB,CAFe,CAGf;;QAEAR,QAAQ,CAAC;UACPP,IAAI,EAAEG,WADC;UAEPF,OAAO,EAAEgB;QAFF,CAAD,CAAR;QAIAC,UAAU,CAAC,MAAM;UACfX,QAAQ,CAAC;YACPP,IAAI,EAAEI,WADC;YAEPH,OAAO,EAAE;UAFF,CAAD,CAAR;QAID,CALS,EAKP,GALO,CAAV;MAMD,CAfD,MAeO;QACLkB,KAAK,CAAC,wBAAD,CAAL;MACD;IACF,CAtBD,CAsBE,OAAOC,KAAP,EAAc;MACdX,OAAO,CAACC,GAAR,CAAYU,KAAZ;IACD;EACF,CA3BD;AA4BD,CA9BM"},"metadata":{},"sourceType":"module"}